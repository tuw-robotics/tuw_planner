##enable named panes in tmux.conf with:
#set -g pane-border-format "#{pane_index} #{pane_title}"
#set -g pane-border-status bottom

name: pioneer3dx
#root: /home/markus/projects/tuw-ros

windows:
  - maps:
      panes: 
        - stage: 
          - printf '\033]2;%s\033\\' 'stage'
          - ros2 launch stage_ros2 stage.launch.py world:=straden
        - robot description: 
          - printf '\033]2;%s\033\\' 'robot description'
          - ros2 launch tuw_gazebo_models robot_description.launch.py model_name:=robot0  robot:=pioneer3dx
        - laser filter: 
          - printf '\033]2;%s\033\\' 'laser filter'
          - ros2 launch tuw_nav2 laser_filter_launch.py use_sim_time:=true filter_yaml:=shadow_filter_stage.yaml scan_src:=base_scan
        - rviz: 
          - printf '\033]2;%s\033\\' 'rviz'
          - ros2 launch tuw_nav2 rviz_launch.py use_sim_time:=true config:=nav2_graph
        - object_map_server: 
          - printf '\033]2;%s\033\\' 'object_map_server'
          - ros2 run tuw_object_map_server object_map_server_node --ros-args  -p loop_rate:=0 -r objects:=object_map_server/objects -r get_objects:=object_map_server/get_objects -p object_map_json:=./ws02/src/tuw_greenhive/config/object_map/starden-2024-01-14.json
        - object_map: 
          - printf '\033]2;%s\033\\' 'object_map'
          - sleep 1; ros2 lifecycle set /geo_map configure; sleep 1; ros2 lifecycle set /geo_map activate
          - ros2 run tuw_object_map object_map_node --ros-args   -p loop_rate:=10 -p frame_map:=map -p publish_tf:=true -p map_border:=5.0 -r get_objects:=object_map_server/get_objects -r get_map:=map_server/map -r objects:=object_map_server/objects
        - localization: 
          - printf '\033]2;%s\033\\' 'localization'
          - ros2 launch tuw_nav2 fake_localization_launch.py use_sim_time:=true init_pose_yaml:=init_pose_straden.yaml vehilce:=pioneer3dx
          #- ros2 launch tuw_nav2 localization_launch.py      use_sim_time:=true init_pose_yaml:=init_pose_straden.yaml vehilce:=pioneer3dx
        - graph_voronoi: 
          - printf '\033]2;%s\033\\' 'graph_voronoi'
          - ros2 run tuw_graph_generator graph_voronoi_node --ros-args -r get_map:=map_server/map
          #- sleep 5; ros2 run tuw_graph_voronoi graph_voronoi_node --ros-args -p map_topic:=map -p threshold_ending:=1.5 -p loop_rate:=5  -p loop_rate:=5 -p publish_path:=false
        - graph_split: 
          - printf '\033]2;%s\033\\' 'graph_split'
          - ros2 run tuw_graph_generator graph_split_node --ros-args  -r graph_split:=graph
        - nav2-full: 
          - printf '\033]2;%s\033\\' 'nav2-full'
          #- read -p "start nav2"; ros2 launch tuw_nav2 nav2_minimal_launch.py
        - nav2-without-planner: 
          - printf '\033]2;%s\033\\' 'nav2-without-planner'
          - ros2 launch tuw_nav2 nav2_minimal_launch.py planner_server_yaml:=empty controller_server_yaml:=controller_server_mppi.yaml
        - planner: 
          - printf '\033]2;%s\033\\' 'planner'
          - ros2 run nav2_planner planner_server --ros-args --params-file ws02/src/tuw_planner/tuw_planner_graph/config/nav2/astar.yaml